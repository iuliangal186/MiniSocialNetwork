@using MiniSocialNetwork.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Name</title>
</head>

<body>
    <div class="group-chat-body">
        <div class="group-chat-details">
            @if (ViewBag.Message != null)
            {
                <span style="color:red">@ViewBag.Message</span>
            }
            @Html.Partial("GroupComponent")
        </div>
        <div class="group-chat-chat">
            @if (ViewBag.ShowMessages == 1)
            {
                //Html.RenderPartial("GroupChatComponent", (IEnumerable<Message>)ViewBag.GroupMessages);
                <div class="message-body">
                    <ul class="message-list" id="chat">
                        @foreach (Message message in ViewBag.GroupMessages)
                        {
                            if (message.UserId == ViewBag.CurrentUserId)
                            {
                                <li class="message-self">
                                    <img class="message-image" src="@message.PictureUrl" />
                                    <p class="message-title">@message.Nickname</p>
                                    <p class="message-content">@message.Content</p>
                                </li>
                            }
                            else
                            {
                                <li class="message-others">
                                    <img class="message-image" src="@message.PictureUrl" />
                                    <p class="message-title">@message.Nickname</p>
                                    <p class="message-content">@message.Content</p>
                                </li>
                            }
                        }
                    </ul>
                    <div class="message-input">
                        <input type="text" autocomplete="off" id="messageinput" placeholder="Send message" />
                        <button id="sendmessage" class="btn btn-sm btn-success" type="button">Send</button>
                    </div>
                </div>

            }
            else
            {
                <h4>You need to join the group to see messages</h4>
            }
        </div>
        <div class="group-chat-users">
            <ul class="user-list">
                @foreach (Profile profile in ViewBag.JoinedUsers)
                {
                    <li class="user-design">
                        <a href="~/Profile/View/@profile.ProfileId">
                            <img class="users-image" src="@profile.ProfilePictureUrl" />
                            <span>@profile.FullName</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
</body>
</html>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            var messageBody = document.querySelector('#chat');
            messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            // Create a function that the hub can call back to display messages.
            chat.client.addMessageToGroup = function (room, userId, profilepic, nickname, message) {
                // Add the message to the page.
                if (room == @ViewBag.CurrentGroup)
                {
                    if (userId == "@ViewBag.CurrentUserId") {
                        $('#chat').append(
                            '<li class="message-self">' +
                            '<img class="message-image" src="' + profilepic + '" />' +
                            '<p class="message-title">' + nickname + '</p>' +
                            '<p class="message-content">' + message + '</p>' +
                            '</li>'
                        );
                    } else {
                        $('#chat').append(
                            '<li class="message-others">' +
                            '<img class="message-image" src="' + profilepic + '" />' +
                            '<p class="message-title">' + nickname + '</p>' +
                            '<p class="message-content">' + message + '</p>' +
                            '</li>'
                        );
                    }
                }
                var messageBody = document.querySelector('#chat');
                messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;
            };
            // Set initial focus to message input box.
            $('#messageinput').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    // this will also add into database the message
                    chat.server.send("@ViewBag.CurrentGroup", "@ViewBag.ProfilePic", "@ViewBag.FullName", $('#messageinput').val());
                    // Clear text box and reset focus for next comment.
                    $('#messageinput').val('').focus();
                });
                $('#messageinput').keypress(function (ev) {
                    if (ev.keyCode == 13) {
                        chat.server.send("@ViewBag.CurrentGroup", "@ViewBag.ProfilePic", "@ViewBag.FullName", $('#messageinput').val());
                        $('#messageinput').val('').focus();
                    }
                })
            });
        });
        // This optional function html-encodes messages for display in the page.
    </script>
}
